with 

-- join with whatever variables you want. suggestion: join with your sign up and first purchase attribution data.
-- important: the variables cannot have null values, otherwise the joins won't work properly later at the cohort query. so check all your columns for null values and if you find, use coalesce or ifnull to set a constant when null.
daily_rev_enriched as (
  select 
    d.*,
   ` {your_first_purchase_variables}`,
    `{your_sign_up_variables}`
  
  from `{your_dataset}.daily_rev` d
    left join {your_first_purchase_table} f on d.user_id = f.user_id
    left join {your_sign_up_table} sus on d.user_id = sus.user_id
),

cohorts as (
  select
    {all_your_first_purchase_variables},

    {all_your_sign_up_variables},

    first_week,
    week as active_week,
    weeks_since_first,
    count(distinct user_id) as users,
    sum(inc_amt) as inc_amt
  from
    daily_rev_enriched
  group by all
),

cohort_sizes as (
  select
  * except(weeks_since_first, active_week)
  from
    cohorts
  where
    weeks_since_first = 0
),

-- Generate all possible week combinations with a 52 weeks limit. This limit can be changed for whatever constant you'd like. Then, in your dashboard limit the number of columns in the pivot table to the same value.
all_weeks as (
  select
    cs.* except(users, inc_amt),
    date_add(cs.first_week, interval week_number week) as active_week
  from
    cohort_sizes cs,
    unnest(generate_array(0, 52)) as week_number
),

-- Join cohorts with all possible weeks
all_cohorts as (
  select
    aw.*,
    date_diff(aw.active_week, aw.first_week, week) as weeks_since_first,
    c.users as users,
    c.inc_amt as inc_amt
  from
    all_weeks aw
    left join cohorts c 
    on aw.{all_your_first_purchase_variables} = c.{all_your_first_purchase_variables}

    and aw.{all_your_sign_up_variables} = c.{all_your_sign_up_variables}

    and aw.first_week = c.first_week
    and aw.active_week = c.active_week
),

-- Calculate cumulative data
cumulative as (
  select
    c1.*,
    cs.users as cohort_num_users,
    sum(c2.inc_amt) as cum_amt
  from
    all_cohorts c1
    join all_cohorts c2 on c1.first_week = c2.first_week
    and c1.{all_your_first_purchase_variables} = c2.{all_your_first_purchase_variables}
    
    and c1.{all_your_sign_up_variables} = c2.{all_your_sign_up_variables}

    and c2.weeks_since_first <= c1.weeks_since_first
    
    join cohort_sizes cs on cs.first_week = c1.first_week
    and cs.{all_your_first_purchase_variables} = c1.{all_your_first_purchase_variables}

    and cs.{all_your_sign_up_variables} = c1.{all_your_sign_up_variables}

  group by all
)

-- Cutting the excess
select * except(excess_cut) from 
  (select 
    *,
    sum(users) over (partition by first_week, weeks_since_first) as excess_cut
    from cumulative)
where excess_cut is not null
